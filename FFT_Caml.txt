type complexe = {mutable Re : float ; mutable Im : float};;
let pi = 4. *. atan 1.;;
let w k n = {Re = cos (2.*.pi*.(float_of_int k)/.(float_of_int n)) ; Im = sin (2.*.pi*.(float_of_int k)/.(float_of_int n))};;

let paire t = let n = vect_length t in let tab = make_vect ((n+1)/2) t.(0) in
	for k = 0 to (n+1)/2 - 1 do 
		tab.(k) <- t.(2*k)
	done;
	tab;;

let impaire t = let n = vect_length t in let tab = make_vect ((n+1)/2) t.(0) in
	for k = 0 to (n+1)/2 - 2 do 
		tab.(k) <- t.(2*k + 1)
	done;
	if n mod 2 = 0 then tab.((n+1)/2 - 1) <- t.(n-1);
	tab;;
	
let mult z1 z2 = let {Re = x1 ; Im = y1} = z1 and {Re = x2 ; Im = y2} = z2 
in {Re = x1 *. x2 -. y1*.y2 ; Im = x1*.y2 +. x2*.y1};;

let add z1 z2 = let {Re = x1 ; Im = y1} = z1 and {Re = x2 ; Im = y2} = z2 
in {Re = x1 +. x2 ; Im = y1 +. y2};;


let rec fft a = let n = vect_length a in match n with 
	|1 -> a
	|_ -> let a_0 = paire a and a_1 = impaire a and y = make_vect n {Re = 0.; Im = 0.} in
	      let y_0 = fft a_0 and y_1 = fft a_1 in
	      for k = 0 to n/2 - 1 do 
	      	y.(k) <- add y_0.(k) (mult (w k n) y_1.(k));
			y.(k + n/2) <- add y_0.(k) (mult (w (k+n/2) n) y_1.(k))
		done;
 	      y;;
